<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.7.0</version>
        <relativePath/>
    </parent>

    <groupId>it.bz.opendatahub.alpinebitsserver.odh</groupId>
    <artifactId>alpinebitsserver-odh-root</artifactId>
    <version>3.0.1</version>

    <packaging>pom</packaging>
    <name>AlpineBits Server with ODH as backend</name>

    <modules>
        <module>application-common</module>
        <module>application-spring</module>
        <module>build-tools</module>
        <module>odh-backend</module>
        <module>odh-inventory</module>
        <module>odh-freerooms</module>
    </modules>

<!--    <repositories>-->
<!--        <repository>-->
<!--            <id>maven-repo.opendatahub.bz.it</id>-->
<!--            <url>http://it.bz.opendatahub.s3-website-eu-west-1.amazonaws.com/release</url>-->
<!--        </repository>-->
<!--    </repositories>-->

    <properties>
        <odh-alpinebits.version>2.1.1</odh-alpinebits.version>

        <maven-compiler-plugin.version>3.8.0</maven-compiler-plugin.version>
        <maven-enforcer-plugin.version>3.0.0-M2</maven-enforcer-plugin.version>
        <maven-surefire-plugin.version>2.20</maven-surefire-plugin.version>
        <maven-failsafe-plugin.version>2.20</maven-failsafe-plugin.version>
        <maven-javadoc-plugin.version>3.0.1</maven-javadoc-plugin.version>
        <checkstyle-maven.version>3.1.1</checkstyle-maven.version>
        <checkstyle.version>8.29</checkstyle.version>
        <maven-pmd-plugin.version>3.10.0</maven-pmd-plugin.version>
        <sonar-maven-plugin.version>3.4.0.905</sonar-maven-plugin.version>
        <jacoco.version>0.8.2</jacoco.version>

        <versions-maven-plugin.version>2.7</versions-maven-plugin.version>
        <dependency-check-maven.version>5.0.0</dependency-check-maven.version>
        <gitflow-maven-plugin.version>1.10.0</gitflow-maven-plugin.version>
        <maven-source-plugin.version>3.0.1</maven-source-plugin.version>

        <testng.version>7.7.0</testng.version>
        <rest-assured.version>3.1.1</rest-assured.version>
        <mock-server.version>5.11.1</mock-server.version>

        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <skipTests>false</skipTests>
        <argLine>-Dfile.encoding=UTF-8</argLine>
    </properties>

    <organization>
        <name>IDM SÃ¼dtirol - Alto Adige</name>
        <url>https://www.idm-suedtirol.com</url>
    </organization>

    <developers>
        <developer>
            <name>Christian Gapp</name>
            <email>gapp.christian@gmail.com</email>
            <url>https://gappc.net/</url>
            <id>gappc</id>
        </developer>
    </developers>

    <licenses>
        <license>
            <name>MPLv2 License</name>
            <url>https://www.mozilla.org/en-US/MPL/2.0/</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <profiles>
        <profile>
            <!-- Execute this profile to run integration tests -->
            <id>it</id>
            <build>
                <plugins>
                    <!-- Integration tests -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>report</id>
            <properties>
                <!-- Exclude *Exception.java from code coverage reports -->
                <sonar.coverage.exclusions>**/*Exception.java</sonar.coverage.exclusions>
                <sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <configuration>
                            <skip>${skipTests}</skip>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>security-scan</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.owasp</groupId>
                        <artifactId>dependency-check-maven</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>sources</id>
            <build>
                <plugins>
                    <!-- Generate sources jar -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>it.bz.opendatahub.alpinebitsserver.odh</groupId>
                <artifactId>application-common-environment</artifactId>
                <version>3.0.1</version>
            </dependency>
            <dependency>
                <groupId>it.bz.opendatahub.alpinebitsserver.odh</groupId>
                <artifactId>application-common-middleware-config</artifactId>
                <version>3.0.1</version>
            </dependency>
            <dependency>
                <groupId>it.bz.opendatahub.alpinebitsserver.odh</groupId>
                <artifactId>application-common-routing</artifactId>
                <version>3.0.1</version>
            </dependency>
            <dependency>
                <groupId>it.bz.opendatahub.alpinebitsserver.odh</groupId>
                <artifactId>odh-backend-api</artifactId>
                <version>3.0.1</version>
            </dependency>
            <dependency>
                <groupId>it.bz.opendatahub.alpinebitsserver.odh</groupId>
                <artifactId>odh-backend-impl</artifactId>
                <version>3.0.1</version>
            </dependency>
            <dependency>
                <groupId>it.bz.opendatahub.alpinebitsserver.odh</groupId>
                <artifactId>odh-freerooms-api</artifactId>
                <version>3.0.1</version>
            </dependency>
            <dependency>
                <groupId>it.bz.opendatahub.alpinebitsserver.odh</groupId>
                <artifactId>odh-freerooms-impl</artifactId>
                <version>3.0.1</version>
            </dependency>
            <dependency>
                <groupId>it.bz.opendatahub.alpinebitsserver.odh</groupId>
                <artifactId>odh-inventory-api</artifactId>
                <version>3.0.1</version>
            </dependency>
            <dependency>
                <groupId>it.bz.opendatahub.alpinebitsserver.odh</groupId>
                <artifactId>odh-inventory-impl</artifactId>
                <version>3.0.1</version>
            </dependency>

            <!-- AlpineBits library dependencies -->
            <dependency>
                <groupId>it.bz.opendatahub.alpinebits</groupId>
                <artifactId>alpinebits-common-api</artifactId>
                <version>${odh-alpinebits.version}</version>
            </dependency>
            <dependency>
                <groupId>it.bz.opendatahub.alpinebits</groupId>
                <artifactId>alpinebits-common-utils</artifactId>
                <version>${odh-alpinebits.version}</version>
            </dependency>
            <dependency>
                <groupId>it.bz.opendatahub.alpinebits</groupId>
                <artifactId>alpinebits-handshaking-api</artifactId>
                <version>${odh-alpinebits.version}</version>
            </dependency>
            <dependency>
                <groupId>it.bz.opendatahub.alpinebits</groupId>
                <artifactId>alpinebits-handshaking-impl</artifactId>
                <version>${odh-alpinebits.version}</version>
            </dependency>
            <dependency>
                <groupId>it.bz.opendatahub.alpinebits</groupId>
                <artifactId>alpinebits-housekeeping-api</artifactId>
                <version>${odh-alpinebits.version}</version>
            </dependency>
            <dependency>
                <groupId>it.bz.opendatahub.alpinebits</groupId>
                <artifactId>alpinebits-housekeeping-impl</artifactId>
                <version>${odh-alpinebits.version}</version>
            </dependency>
            <dependency>
                <groupId>it.bz.opendatahub.alpinebits</groupId>
                <artifactId>alpinebits-middleware-api</artifactId>
                <version>${odh-alpinebits.version}</version>
            </dependency>
            <dependency>
                <groupId>it.bz.opendatahub.alpinebits</groupId>
                <artifactId>alpinebits-middleware-impl</artifactId>
                <version>${odh-alpinebits.version}</version>
            </dependency>
            <dependency>
                <groupId>it.bz.opendatahub.alpinebits</groupId>
                <artifactId>alpinebits-routing-api</artifactId>
                <version>${odh-alpinebits.version}</version>
            </dependency>
            <dependency>
                <groupId>it.bz.opendatahub.alpinebits</groupId>
                <artifactId>alpinebits-routing-impl</artifactId>
                <version>${odh-alpinebits.version}</version>
            </dependency>
            <dependency>
                <groupId>it.bz.opendatahub.alpinebits</groupId>
                <artifactId>alpinebits-servlet-api</artifactId>
                <version>${odh-alpinebits.version}</version>
            </dependency>
            <dependency>
                <groupId>it.bz.opendatahub.alpinebits</groupId>
                <artifactId>alpinebits-servlet-impl</artifactId>
                <version>${odh-alpinebits.version}</version>
            </dependency>
            <dependency>
                <groupId>it.bz.opendatahub.alpinebits</groupId>
                <artifactId>alpinebits-validation-api</artifactId>
                <version>${odh-alpinebits.version}</version>
            </dependency>
            <dependency>
                <groupId>it.bz.opendatahub.alpinebits</groupId>
                <artifactId>alpinebits-validation-impl</artifactId>
                <version>${odh-alpinebits.version}</version>
            </dependency>
            <dependency>
                <groupId>it.bz.opendatahub.alpinebits</groupId>
                <artifactId>alpinebits-xml-api</artifactId>
                <version>${odh-alpinebits.version}</version>
            </dependency>
            <dependency>
                <groupId>it.bz.opendatahub.alpinebits</groupId>
                <artifactId>alpinebits-xml-impl</artifactId>
                <version>${odh-alpinebits.version}</version>
            </dependency>

            <!-- Test dependencies -->
            <dependency>
                <groupId>org.testng</groupId>
                <artifactId>testng</artifactId>
                <version>${testng.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.rest-assured</groupId>
                <artifactId>rest-assured</artifactId>
                <version>${rest-assured.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.rest-assured</groupId>
                <artifactId>xml-path</artifactId>
                <version>${rest-assured.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mock-server</groupId>
                <artifactId>mockserver-netty</artifactId>
                <version>${mock-server.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- Integration test dependencies -->
            <dependency>
                <groupId>org.jboss.arquillian.testng</groupId>
                <artifactId>arquillian-testng-container</artifactId>
                <version>1.4.0.Final</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.arquillian.container</groupId>
                <artifactId>arquillian-tomcat-embedded-8</artifactId>
                <version>1.1.0.Final</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <!-- Compile sources -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <source>1.8</source>
                        <target>1.8</target>
                    </configuration>
                </plugin>

                <!-- Control environmental constraints -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${maven-enforcer-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>enforce-java</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <requireJavaVersion>
                                        <version>[1.8,)</version>
                                    </requireJavaVersion>
                                    <requireMavenVersion>
                                        <version>[3.2.1,)</version>
                                    </requireMavenVersion>
                                </rules>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!-- Check code style -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>${checkstyle-maven.version}</version>
                    <executions>
                        <execution>
                            <id>verify-style</id>
                            <phase>validate</phase>
                            <configuration>
                                <configLocation>build-tools/src/main/resources/checkstyle.xml</configLocation>
                                <suppressionsLocation>
                                    build-tools/src/main/resources/checkstyle-suppressions.xml
                                </suppressionsLocation>
                                <consoleOutput>true</consoleOutput>
                                <includeTestSourceDirectory>true</includeTestSourceDirectory>
                                <!--check only src directory, ignore generated sources-->
                                <sourceDirectories>
                                    <sourceDirectory>${project.build.sourceDirectory}</sourceDirectory>
                                </sourceDirectories>
                            </configuration>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                    <dependencies>
                        <dependency>
                            <groupId>com.puppycrawl.tools</groupId>
                            <artifactId>checkstyle</artifactId>
                            <version>${checkstyle.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>

                <!-- Unit tests -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                    <configuration>
                        <parallel>true</parallel>
                        <skipTests>${skipTests}</skipTests>
                        <!--
                            ISSUE: org.apache.maven.surefire.booter.SurefireBooterForkException: The forked
                                VM terminated without properly saying goodbye
                            TEMP SOLUTION: set "useSystemClassLoader" to false
                            See https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=911925 and
                                https://issues.apache.org/jira/browse/SUREFIRE-1588
                        -->
                        <useSystemClassLoader>false</useSystemClassLoader>
                    </configuration>
                </plugin>

                <!-- Integration tests -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${maven-failsafe-plugin.version}</version>
                    <configuration>
                        <encoding>UTF-8</encoding>
                        <!--
                            ISSUE: org.apache.maven.surefire.booter.SurefireBooterForkException: The forked
                                VM terminated without properly saying goodbye
                            TEMP SOLUTION: set "useSystemClassLoader" to false
                            See https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=911925 and
                                https://issues.apache.org/jira/browse/SUREFIRE-1588
                        -->
                        <useSystemClassLoader>false</useSystemClassLoader>
                    </configuration>
                    <executions>
                        <execution>
                            <id>integration-test</id>
                            <goals>
                                <goal>integration-test</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>verify</id>
                            <goals>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!-- Static source code analyzer -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-pmd-plugin</artifactId>
                    <version>${maven-pmd-plugin.version}</version>
                    <configuration>
                        <aggregate>true</aggregate>
                        <failurePriority>3</failurePriority>
                        <printFailingErrors>true</printFailingErrors>
                        <rulesets>
                            <ruleset>build-tools/src/main/resources/pmd.xml</ruleset>
                        </rulesets>
                        <linkXRef>false</linkXRef>
                    </configuration>
                </plugin>

                <!-- Inspection of code quality -->
                <plugin>
                    <groupId>org.sonarsource.scanner.maven</groupId>
                    <artifactId>sonar-maven-plugin</artifactId>
                    <version>${sonar-maven-plugin.version}</version>
                </plugin>

                <!-- Code coverage -->
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco.version}</version>
                    <configuration>
                        <append>true</append>
                    </configuration>
                    <executions>
                        <execution>
                            <id>default-prepare-agent</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>default-report</id>
                            <phase>prepare-package</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>default-prepare-agent-integration</id>
                            <goals>
                                <goal>prepare-agent-integration</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>default-report-integration</id>
                            <goals>
                                <goal>report-integration</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!-- Check deployed version -->
                <plugin>
                    <groupId>pl.project13.maven</groupId>
                    <artifactId>git-commit-id-plugin</artifactId>
                    <version>2.2.4</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>revision</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <dateFormat>yyyy-MM-dd'T'HH:mm:ssZ</dateFormat>
                        <failOnNoGitDirectory>false</failOnNoGitDirectory>
                    </configuration>
                </plugin>

                <!-- Support various Git workflows -->
                <plugin>
                    <groupId>com.amashchenko.maven.plugin</groupId>
                    <artifactId>gitflow-maven-plugin</artifactId>
                    <version>${gitflow-maven-plugin.version}</version>
                </plugin>

                <!-- Manage artifact versions -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>${versions-maven-plugin.version}</version>
                </plugin>

                <!-- Check dependencies for vulnerabilities -->
                <plugin>
                    <groupId>org.owasp</groupId>
                    <artifactId>dependency-check-maven</artifactId>
                    <version>${dependency-check-maven.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <failBuildOnCVSS>8</failBuildOnCVSS>
                        <cveValidForHours>24</cveValidForHours>
                        <skipProvidedScope>true</skipProvidedScope>
                    </configuration>
                </plugin>

                <!-- Generate Javadoc -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${maven-javadoc-plugin.version}</version>
                    <configuration>
                        <sourceFileExcludes>
                            <!--Exclude tests-->
                            <exclude>**/**Test.java</exclude>
                            <exclude>**/**IT.java</exclude>
                        </sourceFileExcludes>
                    </configuration>
                </plugin>

                <!-- Generate sources jar -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${maven-source-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
            </plugin>

            <!--run code quality checks-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

</project>
